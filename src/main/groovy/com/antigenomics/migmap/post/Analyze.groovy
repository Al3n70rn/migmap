/*
 * Copyright 2014-2015 Mikhail Shugay
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.antigenomics.migmap.post

import com.antigenomics.migmap.io.ClonotypeSerializer
import com.antigenomics.migmap.post.analysis.Analysis

def cli = new CliBuilder(usage: "Correct [options] input.bin output_prefix\n" +
        "'input.bin' is a binary output file generated by MIGMAP with --write-binary option")

def opt = cli.parse(args)

if (opt.h || opt == null || opt.arguments().size() != 2) {
    cli.usage()
    System.exit(3)
}

def inputFile = opt.arguments()[0], outputPrefix = opt.arguments()[1]

def clonotypes = ClonotypeSerializer.load(new FileInputStream(inputFile))

def postAnalysis = new Analysis(clonotypes)

postAnalysis.generateHypermutationTable(outputPrefix + ".shm.txt")
postAnalysis.generateClonotypeTree(outputPrefix)